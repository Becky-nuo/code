Python 3.7.3 (v3.7.3:ef4ec6ed12, Mar 25 2019, 21:26:53) [MSC v.1916 32 bit (Intel)] on win32
Type "help", "copyright", "credits" or "license()" for more information.
#列表元素访问和计数


#通过索引直接访问元素（区间在[0,列表长度-1]这个范围，超过则报错）
>>> a=[10,20,30,40,50,20,30,40]
>>> a[3]
40
>>> a[10]  #超出范围
Traceback (most recent call last):
  File "<pyshell#4>", line 1, in <module>
    a[10]
IndexError: list index out of range

#index()获得指定元素在列表中首次出现的索引位置  index(value,[start,[end]])
>>> a=[10,20,30,40,50,20,30,40]
>>> a.index(20)
1
>>> a.index(20,2)  #指定范围（从索引位置2开始往后搜索的第一个20）
5
>>> a.index(30,5,7) #从索引位置5到7这个区间，第一次出现30的位置
6

#count()获得指定元素在列表中出现的次数
>>> a=[10,20,30,40,50,20,30,40]
>>> a.count(20)
2

#len()返回列表长度
>>> a=[10,20,30,40,50,20,30,40]
>>> len(a)
8

#成员资格判断
>>> a=[10,20,30,40,50,20,30,40]
>>> 20 in a
True         #在
>>> 100 in a
False        #不在
>>> 100 not in a
True



#切片操作slice   [起始偏移量start终止偏移量end[:步长step]]
>>> a=[90,80,70,60,50,40]
>>> a[:]    #提取整个列表
[90, 80, 70, 60, 50, 40]
>>> a[1:3:1]  #从位置1开始，提取后两位
[80, 70]
>>> a[1::2]  #从位置1开始，提取到末尾，跳数为2
[80, 60, 40]
>>> a[1:]    #从位置1开始，提取到末尾
[80, 70, 60, 50, 40]
>>> a[:2]  #从位置2开始，提取前面的
[90, 80]
>>> a[-3:]  #倒数三个
[60, 50, 40]
>>> a[-5:-3]  #倒数第五个到倒数第三个（包头不包尾）
[80, 70]
>>> a[::-1]  #步长为负数，从右到左反向提取
[40, 50, 60, 70, 80, 90]
>>> a[1:100]  #不在范围内也不会报错，会按要求提取
[80, 70, 60, 50, 40]

#列表遍历
>>>for x in a;
SyntaxError: invalid syntax
>>> for x in a:
	print(x)

	
90
80
70
60
50
40



#列表排序

#修改原列表，不建新列表的排序
>>> a=[20,10,30,40]
>>> id(a)
65666984
>>> a.sort()  #默认是升序排列
>>> a
[10, 20, 30, 40]
>>> a=[10,20,30,40]
>>> a.sort(reverse=True)  #降序排列
>>> a
[40, 30, 20, 10]
>>> import random
>>> random.shuffle(a)  #打乱顺序
>>> a
[30, 40, 20, 10]
>>> random.shuffle(a)
>>> a
[40, 10, 20, 30]

#建新列表的排序（返回新列表，不对原列表做修改）
>>> a=[20,10,30,40]
>>> id(a)
65666984
>>> a=sorted(a)   #默认升序
>>> a
[10, 20, 30, 40]
>>> id(a)  #新对象
59217840
>>> b=[20,10,30,40]
>>> b
[20, 10, 30, 40]
>>> id(a)
59217840
>>> id(b)
17681504
>>> c=sorted(a,reverse=True)  #降序
>>> c
[40, 30, 20, 10]

#reversed()返回迭代器（支持逆序排列）
>>> a=[20,10,30,40]
>>> c=reversed(a)
>>> c   #迭代器（只能使用一次）
<list_reverseiterator object at 0x010E0F70>
>>> list(c)
[40, 30, 10, 20]
>>> list(c)
[]

#列表内置函数 
>>> a=[3,10,20,15,9]
>>> max(a)  #返回最大值
20 
>>> min(a)   #返回最小值
3
>>> sum(a)    #求和（不适用非数值列表运算，则会报错）
57



#多维列表


#二维列表(存储二维、表格的数据)
>>> a=[
	["嗯嗯",100,200],
	["嗯二",300,400],
	["嗯三",500,600],
       ]
>>> a[0]  
['嗯嗯', 100, 200]
>>> a[1]
['嗯二', 300, 400]
>>> a[2]
['嗯三', 500, 600]
>>> a[0][2]
200
>>> a[2][0]
'嗯三'
>>> 

'''列表对象的常用方法：  
  list_append(x)       增加元素      将元素x增加到列表list尾部
  list_extend(aList)   增加元素      将列表alist所有元素加到列表list尾部
  list_insert(index,x) 增加元素      在列表list指定位置index处插入元素x
  list_remove(x)       删除元素      在列表list中删除首次出现的指定元素
  list_pop([index])    删除元素      删除并返回列表list指定为止index处的元素，默认最后一个元素
  list_clear()         删除所有元素  删除列表所有元素，并不是删除列表对象
  list_index(x)        访问元素      返回第一个x的索引位置，若不存在x元素则报错
  list_count(x)        计数          返回指定元素x在列表list中出现的次数
  len(list)            列表长度      返回列表包含元素的个数 
  list_reverse()       翻转排序      所有元素原地排序
  list_sort()          排序          所有元素原地排序
  list_copy()          浅拷贝        返回列表对象的浅拷贝
'''
