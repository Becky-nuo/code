#Python 数据库 API(DB API,解决Python数据库模块存在的这种问题)





'''

    各种SQL数据库可供选择，其中很多都有相应的Python客户端模块（有些数据库甚至有多个）。

    所有数据库的大多数基本功能都相同，对于使用其中一种数据库的程序，很容易对其进行修改以使用另一种数据库。

    问题是即便不同模块提供的功能大致相同，它们的接口（ API）也是不同的。

    全局变量所有与DB API2.0兼容的数据库模块都必须包含三个全局变量，它们描述了模块的特征。

    API设计得很灵活，无需进行太多包装就能配合多种不同的底层机制使用。




    API级别（ apilevel）是一个字符串常量，指出了使用的API版本(变量的值为'1.0'或'2.0')。

    如果没有这个变量，就说明模块不与DB API 2.0兼容，应假定使用的是DB API 1.0。

    程安全程度（ threadsafety）是一个0~3（含）的整数。 0表示线程不能共享模块，而3表示模块是绝对线程安全的。

    1表示线程可共享模块本身，但不能共享连接（参见13.1.3节），而2表示线程可共享模块和连接，但不能共享游标。

    参数风格（ paramstyle）表示当你执行多个类似的数据库查询时，如何在SQL查询中插入参数。

    'format'表示标准字符串格式设置方式（使用基本的格式编码），如在要插入参数的地方插入%s。
    
    'pyformat'表示扩展的格式编码，即旧式字典插入使用的格式编码，如%(foo)s。


还有三种指定待插入字段的方式：

        'qmark'       表示使用问号
        
        'numeric'     表示使用:1和:2的形式表示字段（其中的数字是参数的编号）
        
        'named'       表示使用:foobar的形式表示字段（其中foobar为参数名）


Python DB API的模块属性:


        变 量 名                   描 述
        
        apilevel            使用的Python DB API版本
        
        threadsafety        模块的线程安全程度如何
        
        paramstyle          在SQL查询中使用哪种参数风格



        


'''
